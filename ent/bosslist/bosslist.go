// Code generated by ent, DO NOT EDIT.

package bosslist

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the bosslist type in the database.
	Label = "bosslist"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldStartsAt holds the string denoting the starts_at field in the database.
	FieldStartsAt = "starts_at"
	// FieldCustomTemplate holds the string denoting the custom_template field in the database.
	FieldCustomTemplate = "custom_template"
	// FieldDiscordMessageID holds the string denoting the discord_message_id field in the database.
	FieldDiscordMessageID = "discord_message_id"
	// EdgeBoss holds the string denoting the boss edge name in mutations.
	EdgeBoss = "boss"
	// EdgeParticipants holds the string denoting the participants edge name in mutations.
	EdgeParticipants = "participants"
	// Table holds the table name of the bosslist in the database.
	Table = "bosslists"
	// BossTable is the table that holds the boss relation/edge.
	BossTable = "bosslists"
	// BossInverseTable is the table name for the Boss entity.
	// It exists in this package in order to avoid circular dependency with the "boss" package.
	BossInverseTable = "bosses"
	// BossColumn is the table column denoting the boss relation/edge.
	BossColumn = "boss_bosslists"
	// ParticipantsTable is the table that holds the participants relation/edge. The primary key declared below.
	ParticipantsTable = "bosslist_participants"
	// ParticipantsInverseTable is the table name for the Participant entity.
	// It exists in this package in order to avoid circular dependency with the "participant" package.
	ParticipantsInverseTable = "participants"
)

// Columns holds all SQL columns for bosslist fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldStartsAt,
	FieldCustomTemplate,
	FieldDiscordMessageID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "bosslists"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"boss_bosslists",
}

var (
	// ParticipantsPrimaryKey and ParticipantsColumn2 are the table columns denoting the
	// primary key for the participants relation (M2M).
	ParticipantsPrimaryKey = []string{"bosslist_id", "participant_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
