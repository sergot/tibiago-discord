// Code generated by ent, DO NOT EDIT.

package participant

import (
	"fmt"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the participant type in the database.
	Label = "participant"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "uuid"
	// FieldVocation holds the string denoting the vocation field in the database.
	FieldVocation = "vocation"
	// FieldDiscordID holds the string denoting the discord_id field in the database.
	FieldDiscordID = "discord_id"
	// EdgeBosslist holds the string denoting the bosslist edge name in mutations.
	EdgeBosslist = "bosslist"
	// Table holds the table name of the participant in the database.
	Table = "participants"
	// BosslistTable is the table that holds the bosslist relation/edge.
	BosslistTable = "participants"
	// BosslistInverseTable is the table name for the Bosslist entity.
	// It exists in this package in order to avoid circular dependency with the "bosslist" package.
	BosslistInverseTable = "bosslists"
	// BosslistColumn is the table column denoting the bosslist relation/edge.
	BosslistColumn = "bosslist_participants"
)

// Columns holds all SQL columns for participant fields.
var Columns = []string{
	FieldID,
	FieldVocation,
	FieldDiscordID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "participants"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"bosslist_participants",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// Vocation defines the type for the "vocation" enum field.
type Vocation string

// Vocation values.
const (
	VocationEk Vocation = "ek"
	VocationEd Vocation = "ed"
	VocationMs Vocation = "ms"
	VocationRp Vocation = "rp"
)

func (v Vocation) String() string {
	return string(v)
}

// VocationValidator is a validator for the "vocation" field enum values. It is called by the builders before save.
func VocationValidator(v Vocation) error {
	switch v {
	case VocationEk, VocationEd, VocationMs, VocationRp:
		return nil
	default:
		return fmt.Errorf("participant: invalid enum value for vocation field: %q", v)
	}
}
