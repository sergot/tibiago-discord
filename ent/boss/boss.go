// Code generated by ent, DO NOT EDIT.

package boss

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the boss type in the database.
	Label = "boss"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "uuid"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldTemplate holds the string denoting the template field in the database.
	FieldTemplate = "template"
	// EdgeBosslists holds the string denoting the bosslists edge name in mutations.
	EdgeBosslists = "bosslists"
	// Table holds the table name of the boss in the database.
	Table = "bosses"
	// BosslistsTable is the table that holds the bosslists relation/edge.
	BosslistsTable = "bosslists"
	// BosslistsInverseTable is the table name for the Bosslist entity.
	// It exists in this package in order to avoid circular dependency with the "bosslist" package.
	BosslistsInverseTable = "bosslists"
	// BosslistsColumn is the table column denoting the bosslists relation/edge.
	BosslistsColumn = "boss_bosslists"
)

// Columns holds all SQL columns for boss fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldTemplate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultTemplate holds the default value on creation for the "template" field.
	DefaultTemplate string
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
