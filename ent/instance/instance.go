// Code generated by ent, DO NOT EDIT.

package instance

import (
	"fmt"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the instance type in the database.
	Label = "instance"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "uuid"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldDiscordGuildID holds the string denoting the discord_guild_id field in the database.
	FieldDiscordGuildID = "discord_guild_id"
	// EdgeConfigs holds the string denoting the configs edge name in mutations.
	EdgeConfigs = "configs"
	// Table holds the table name of the instance in the database.
	Table = "instances"
	// ConfigsTable is the table that holds the configs relation/edge.
	ConfigsTable = "instance_configs"
	// ConfigsInverseTable is the table name for the InstanceConfig entity.
	// It exists in this package in order to avoid circular dependency with the "instanceconfig" package.
	ConfigsInverseTable = "instance_configs"
	// ConfigsColumn is the table column denoting the configs relation/edge.
	ConfigsColumn = "instance_configs"
)

// Columns holds all SQL columns for instance fields.
var Columns = []string{
	FieldID,
	FieldStatus,
	FieldDiscordGuildID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// Status defines the type for the "status" enum field.
type Status string

// Status values.
const (
	StatusActive   Status = "active"
	StatusInactive Status = "inactive"
)

func (s Status) String() string {
	return string(s)
}

// StatusValidator is a validator for the "status" field enum values. It is called by the builders before save.
func StatusValidator(s Status) error {
	switch s {
	case StatusActive, StatusInactive:
		return nil
	default:
		return fmt.Errorf("instance: invalid enum value for status field: %q", s)
	}
}
